<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- ref 사용 위해 컨트롤러 빈등록 해주기 -->
	<bean id="loginSuccess" class="com.kh.security.LoginSuccessHandler" />
	<bean id="customAccessDenied" class="com.kh.security.CustomAccessDeniedHandler" />
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<context:component-scan base-package="com.kh.security" />
	<bean id="memberService" class="com.kh.security.model.service.MemberService" />

	<!-- 접근 권한 설정 // hasAnyRole: 여러 역할 부여 가능 -->
	<security:http>
		<security:intercept-url pattern="/all" access="permitAll"/>
		<security:intercept-url pattern="/member" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:form-login login-page="/login" authentication-success-handler-ref="loginSuccess"/>
		
		<security:csrf disabled="true" />
		<security:logout logout-url="/logout" invalidate-session="true" />
		
		<!-- 멤버가 admin페이지 접속했을 때 접근 거부하는 핸들러 -->
		<!-- 바로 접근제한 페이지로 연결하는 방법
			<security:access-denied-handler error-page="/error"/> 
		 -->
		 <!-- 컨트롤러로 연결하는 방법 -->
		 <security:access-denied-handler ref="customAccessDenied" />
	</security:http>
	
	<security:authentication-manager>	
		<!-- 
			<security:authentication-provider>
			<security:user-service>
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
			<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN" />
			</security:user-service>
		-->
		<security:authentication-provider user-service-ref="memberService">	
		<security:password-encoder hash="bcrypt" />
		
		</security:authentication-provider>	
	</security:authentication-manager>

</beans>
